/**
 * generated by Xtext 2.12.0
 */
package it.unige.dibris.trace_expression_language.tExp;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Trace Expression</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getName <em>Name</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getBodyL <em>Body L</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getTerms <em>Terms</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getRolesL <em>Roles L</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getRoles <em>Roles</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getTypesL <em>Types L</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getTypes <em>Types</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getModulesL <em>Modules L</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getModules <em>Modules</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getDecentralizedL <em>Decentralized L</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getDecentralized <em>Decentralized</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getPartitionL <em>Partition L</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getPartition <em>Partition</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getConstraintsL <em>Constraints L</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getConstraints <em>Constraints</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getGuiL <em>Gui L</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getGui <em>Gui</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getMinimalL <em>Minimal L</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getMinimal <em>Minimal</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getThresholdL <em>Threshold L</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getThreshold <em>Threshold</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getChannelsL <em>Channels L</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getChannels <em>Channels</em>}</li>
 * </ul>
 *
 * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression()
 * @model
 * @generated
 */
public interface TraceExpression extends EObject
{
  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Name</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Body L</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Body L</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Body L</em>' attribute list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_BodyL()
   * @model unique="false"
   * @generated
   */
  EList<String> getBodyL();

  /**
   * Returns the value of the '<em><b>Terms</b></em>' containment reference list.
   * The list contents are of type {@link it.unige.dibris.trace_expression_language.tExp.Term}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Terms</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Terms</em>' containment reference list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_Terms()
   * @model containment="true"
   * @generated
   */
  EList<Term> getTerms();

  /**
   * Returns the value of the '<em><b>Roles L</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Roles L</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Roles L</em>' attribute list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_RolesL()
   * @model unique="false"
   * @generated
   */
  EList<String> getRolesL();

  /**
   * Returns the value of the '<em><b>Roles</b></em>' containment reference list.
   * The list contents are of type {@link it.unige.dibris.trace_expression_language.tExp.Role}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Roles</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Roles</em>' containment reference list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_Roles()
   * @model containment="true"
   * @generated
   */
  EList<Role> getRoles();

  /**
   * Returns the value of the '<em><b>Types L</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Types L</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Types L</em>' attribute list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_TypesL()
   * @model unique="false"
   * @generated
   */
  EList<String> getTypesL();

  /**
   * Returns the value of the '<em><b>Types</b></em>' containment reference list.
   * The list contents are of type {@link it.unige.dibris.trace_expression_language.tExp.EventType}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Types</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Types</em>' containment reference list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_Types()
   * @model containment="true"
   * @generated
   */
  EList<EventType> getTypes();

  /**
   * Returns the value of the '<em><b>Modules L</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Modules L</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Modules L</em>' attribute list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_ModulesL()
   * @model unique="false"
   * @generated
   */
  EList<String> getModulesL();

  /**
   * Returns the value of the '<em><b>Modules</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Modules</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Modules</em>' attribute list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_Modules()
   * @model unique="false"
   * @generated
   */
  EList<String> getModules();

  /**
   * Returns the value of the '<em><b>Decentralized L</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Decentralized L</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Decentralized L</em>' attribute list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_DecentralizedL()
   * @model unique="false"
   * @generated
   */
  EList<String> getDecentralizedL();

  /**
   * Returns the value of the '<em><b>Decentralized</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Decentralized</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Decentralized</em>' attribute list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_Decentralized()
   * @model unique="false"
   * @generated
   */
  EList<String> getDecentralized();

  /**
   * Returns the value of the '<em><b>Partition L</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Partition L</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Partition L</em>' attribute list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_PartitionL()
   * @model unique="false"
   * @generated
   */
  EList<String> getPartitionL();

  /**
   * Returns the value of the '<em><b>Partition</b></em>' containment reference list.
   * The list contents are of type {@link it.unige.dibris.trace_expression_language.tExp.Partition}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Partition</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Partition</em>' containment reference list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_Partition()
   * @model containment="true"
   * @generated
   */
  EList<Partition> getPartition();

  /**
   * Returns the value of the '<em><b>Constraints L</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Constraints L</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Constraints L</em>' attribute list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_ConstraintsL()
   * @model unique="false"
   * @generated
   */
  EList<String> getConstraintsL();

  /**
   * Returns the value of the '<em><b>Constraints</b></em>' containment reference list.
   * The list contents are of type {@link it.unige.dibris.trace_expression_language.tExp.Constraint}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Constraints</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Constraints</em>' containment reference list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_Constraints()
   * @model containment="true"
   * @generated
   */
  EList<Constraint> getConstraints();

  /**
   * Returns the value of the '<em><b>Gui L</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Gui L</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Gui L</em>' attribute list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_GuiL()
   * @model unique="false"
   * @generated
   */
  EList<String> getGuiL();

  /**
   * Returns the value of the '<em><b>Gui</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Gui</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Gui</em>' attribute list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_Gui()
   * @model unique="false"
   * @generated
   */
  EList<String> getGui();

  /**
   * Returns the value of the '<em><b>Minimal L</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Minimal L</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Minimal L</em>' attribute list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_MinimalL()
   * @model unique="false"
   * @generated
   */
  EList<String> getMinimalL();

  /**
   * Returns the value of the '<em><b>Minimal</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Minimal</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Minimal</em>' attribute list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_Minimal()
   * @model unique="false"
   * @generated
   */
  EList<String> getMinimal();

  /**
   * Returns the value of the '<em><b>Threshold L</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Threshold L</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Threshold L</em>' attribute list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_ThresholdL()
   * @model unique="false"
   * @generated
   */
  EList<String> getThresholdL();

  /**
   * Returns the value of the '<em><b>Threshold</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Threshold</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Threshold</em>' attribute list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_Threshold()
   * @model unique="false"
   * @generated
   */
  EList<String> getThreshold();

  /**
   * Returns the value of the '<em><b>Channels L</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Channels L</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Channels L</em>' attribute list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_ChannelsL()
   * @model unique="false"
   * @generated
   */
  EList<String> getChannelsL();

  /**
   * Returns the value of the '<em><b>Channels</b></em>' containment reference list.
   * The list contents are of type {@link it.unige.dibris.trace_expression_language.tExp.Channel}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Channels</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Channels</em>' containment reference list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getTraceExpression_Channels()
   * @model containment="true"
   * @generated
   */
  EList<Channel> getChannels();

} // TraceExpression
