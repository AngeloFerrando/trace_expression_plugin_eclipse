/**
 * generated by Xtext 2.12.0
 */
package it.unige.dibris.trace_expression_language.tExp;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Expression</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.Expression#getVariable <em>Variable</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.Expression#getBodyVar <em>Body Var</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.Expression#getTypeFilter <em>Type Filter</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.Expression#getFirst <em>First</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.Expression#getExprs <em>Exprs</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.Expression#getOperator <em>Operator</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.Expression#getBodyFilter <em>Body Filter</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.Expression#getTypeSeq <em>Type Seq</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.Expression#getBodySeq <em>Body Seq</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.Expression#getEps <em>Eps</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.Expression#getTerm <em>Term</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.Expression#getExpr <em>Expr</em>}</li>
 * </ul>
 *
 * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getExpression()
 * @model
 * @generated
 */
public interface Expression extends EObject
{
  /**
   * Returns the value of the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Variable</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Variable</em>' attribute.
   * @see #setVariable(String)
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getExpression_Variable()
   * @model
   * @generated
   */
  String getVariable();

  /**
   * Sets the value of the '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getVariable <em>Variable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Variable</em>' attribute.
   * @see #getVariable()
   * @generated
   */
  void setVariable(String value);

  /**
   * Returns the value of the '<em><b>Body Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Body Var</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Body Var</em>' containment reference.
   * @see #setBodyVar(Expression)
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getExpression_BodyVar()
   * @model containment="true"
   * @generated
   */
  Expression getBodyVar();

  /**
   * Sets the value of the '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getBodyVar <em>Body Var</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Body Var</em>' containment reference.
   * @see #getBodyVar()
   * @generated
   */
  void setBodyVar(Expression value);

  /**
   * Returns the value of the '<em><b>Type Filter</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Type Filter</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type Filter</em>' reference.
   * @see #setTypeFilter(EventType)
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getExpression_TypeFilter()
   * @model
   * @generated
   */
  EventType getTypeFilter();

  /**
   * Sets the value of the '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getTypeFilter <em>Type Filter</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Type Filter</em>' reference.
   * @see #getTypeFilter()
   * @generated
   */
  void setTypeFilter(EventType value);

  /**
   * Returns the value of the '<em><b>First</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>First</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>First</em>' containment reference.
   * @see #setFirst(PrologExpression)
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getExpression_First()
   * @model containment="true"
   * @generated
   */
  PrologExpression getFirst();

  /**
   * Sets the value of the '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getFirst <em>First</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>First</em>' containment reference.
   * @see #getFirst()
   * @generated
   */
  void setFirst(PrologExpression value);

  /**
   * Returns the value of the '<em><b>Exprs</b></em>' containment reference list.
   * The list contents are of type {@link it.unige.dibris.trace_expression_language.tExp.PrologExpression}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Exprs</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Exprs</em>' containment reference list.
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getExpression_Exprs()
   * @model containment="true"
   * @generated
   */
  EList<PrologExpression> getExprs();

  /**
   * Returns the value of the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Operator</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Operator</em>' attribute.
   * @see #setOperator(String)
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getExpression_Operator()
   * @model
   * @generated
   */
  String getOperator();

  /**
   * Sets the value of the '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getOperator <em>Operator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Operator</em>' attribute.
   * @see #getOperator()
   * @generated
   */
  void setOperator(String value);

  /**
   * Returns the value of the '<em><b>Body Filter</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Body Filter</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Body Filter</em>' containment reference.
   * @see #setBodyFilter(Expression)
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getExpression_BodyFilter()
   * @model containment="true"
   * @generated
   */
  Expression getBodyFilter();

  /**
   * Sets the value of the '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getBodyFilter <em>Body Filter</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Body Filter</em>' containment reference.
   * @see #getBodyFilter()
   * @generated
   */
  void setBodyFilter(Expression value);

  /**
   * Returns the value of the '<em><b>Type Seq</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Type Seq</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type Seq</em>' reference.
   * @see #setTypeSeq(EventType)
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getExpression_TypeSeq()
   * @model
   * @generated
   */
  EventType getTypeSeq();

  /**
   * Sets the value of the '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getTypeSeq <em>Type Seq</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Type Seq</em>' reference.
   * @see #getTypeSeq()
   * @generated
   */
  void setTypeSeq(EventType value);

  /**
   * Returns the value of the '<em><b>Body Seq</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Body Seq</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Body Seq</em>' containment reference.
   * @see #setBodySeq(Expression)
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getExpression_BodySeq()
   * @model containment="true"
   * @generated
   */
  Expression getBodySeq();

  /**
   * Sets the value of the '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getBodySeq <em>Body Seq</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Body Seq</em>' containment reference.
   * @see #getBodySeq()
   * @generated
   */
  void setBodySeq(Expression value);

  /**
   * Returns the value of the '<em><b>Eps</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Eps</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Eps</em>' attribute.
   * @see #setEps(String)
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getExpression_Eps()
   * @model
   * @generated
   */
  String getEps();

  /**
   * Sets the value of the '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getEps <em>Eps</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Eps</em>' attribute.
   * @see #getEps()
   * @generated
   */
  void setEps(String value);

  /**
   * Returns the value of the '<em><b>Term</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Term</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Term</em>' reference.
   * @see #setTerm(Term)
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getExpression_Term()
   * @model
   * @generated
   */
  Term getTerm();

  /**
   * Sets the value of the '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getTerm <em>Term</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Term</em>' reference.
   * @see #getTerm()
   * @generated
   */
  void setTerm(Term value);

  /**
   * Returns the value of the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Expr</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expr</em>' containment reference.
   * @see #setExpr(Expression)
   * @see it.unige.dibris.trace_expression_language.tExp.TExpPackage#getExpression_Expr()
   * @model containment="true"
   * @generated
   */
  Expression getExpr();

  /**
   * Sets the value of the '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getExpr <em>Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Expr</em>' containment reference.
   * @see #getExpr()
   * @generated
   */
  void setExpr(Expression value);

} // Expression
