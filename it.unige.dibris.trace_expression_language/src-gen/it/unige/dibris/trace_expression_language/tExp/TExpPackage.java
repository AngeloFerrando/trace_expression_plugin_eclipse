/**
 * generated by Xtext 2.12.0
 */
package it.unige.dibris.trace_expression_language.tExp;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see it.unige.dibris.trace_expression_language.tExp.TExpFactory
 * @model kind="package"
 * @generated
 */
public interface TExpPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "tExp";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.unige.it/dibris/trace_expression_language/TExp";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "tExp";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  TExpPackage eINSTANCE = it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl.init();

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.DomainmodelImpl <em>Domainmodel</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.DomainmodelImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getDomainmodel()
   * @generated
   */
  int DOMAINMODEL = 0;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL__ELEMENTS = 0;

  /**
   * The number of structural features of the '<em>Domainmodel</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.PrologExpressionImpl <em>Prolog Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.PrologExpressionImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getPrologExpression()
   * @generated
   */
  int PROLOG_EXPRESSION = 1;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROLOG_EXPRESSION__LEFT = 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROLOG_EXPRESSION__OP = 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROLOG_EXPRESSION__RIGHT = 2;

  /**
   * The number of structural features of the '<em>Prolog Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROLOG_EXPRESSION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.TraceExpressionImpl <em>Trace Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TraceExpressionImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getTraceExpression()
   * @generated
   */
  int TRACE_EXPRESSION = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__NAME = 0;

  /**
   * The feature id for the '<em><b>Body L</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__BODY_L = 1;

  /**
   * The feature id for the '<em><b>Terms</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__TERMS = 2;

  /**
   * The feature id for the '<em><b>Roles L</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__ROLES_L = 3;

  /**
   * The feature id for the '<em><b>Roles</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__ROLES = 4;

  /**
   * The feature id for the '<em><b>Types L</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__TYPES_L = 5;

  /**
   * The feature id for the '<em><b>Types</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__TYPES = 6;

  /**
   * The feature id for the '<em><b>Modules L</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__MODULES_L = 7;

  /**
   * The feature id for the '<em><b>Modules</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__MODULES = 8;

  /**
   * The feature id for the '<em><b>Decentralized L</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__DECENTRALIZED_L = 9;

  /**
   * The feature id for the '<em><b>Decentralized</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__DECENTRALIZED = 10;

  /**
   * The feature id for the '<em><b>Partition L</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__PARTITION_L = 11;

  /**
   * The feature id for the '<em><b>Partition</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__PARTITION = 12;

  /**
   * The feature id for the '<em><b>Constraints L</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__CONSTRAINTS_L = 13;

  /**
   * The feature id for the '<em><b>Constraints</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__CONSTRAINTS = 14;

  /**
   * The feature id for the '<em><b>Gui L</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__GUI_L = 15;

  /**
   * The feature id for the '<em><b>Gui</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__GUI = 16;

  /**
   * The feature id for the '<em><b>Minimal L</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__MINIMAL_L = 17;

  /**
   * The feature id for the '<em><b>Minimal</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__MINIMAL = 18;

  /**
   * The feature id for the '<em><b>Threshold L</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__THRESHOLD_L = 19;

  /**
   * The feature id for the '<em><b>Threshold</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__THRESHOLD = 20;

  /**
   * The feature id for the '<em><b>Channels L</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__CHANNELS_L = 21;

  /**
   * The feature id for the '<em><b>Channels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION__CHANNELS = 22;

  /**
   * The number of structural features of the '<em>Trace Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRACE_EXPRESSION_FEATURE_COUNT = 23;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.TermImpl <em>Term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TermImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getTerm()
   * @generated
   */
  int TERM = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__NAME = 0;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__EXPR = 1;

  /**
   * The number of structural features of the '<em>Term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.ExpressionImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 4;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__VARIABLE = 0;

  /**
   * The feature id for the '<em><b>Body Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__BODY_VAR = 1;

  /**
   * The feature id for the '<em><b>Type Filter</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__TYPE_FILTER = 2;

  /**
   * The feature id for the '<em><b>First</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__FIRST = 3;

  /**
   * The feature id for the '<em><b>Exprs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__EXPRS = 4;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__OPERATOR = 5;

  /**
   * The feature id for the '<em><b>Body Filter</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__BODY_FILTER = 6;

  /**
   * The feature id for the '<em><b>Type Seq</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__TYPE_SEQ = 7;

  /**
   * The feature id for the '<em><b>Body Seq</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__BODY_SEQ = 8;

  /**
   * The feature id for the '<em><b>Eps</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__EPS = 9;

  /**
   * The feature id for the '<em><b>Term</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__TERM = 10;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__EXPR = 11;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 12;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.EventTypeImpl <em>Event Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.EventTypeImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getEventType()
   * @generated
   */
  int EVENT_TYPE = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVENT_TYPE__NAME = 0;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVENT_TYPE__EXPR = 1;

  /**
   * The feature id for the '<em><b>Exprs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVENT_TYPE__EXPRS = 2;

  /**
   * The feature id for the '<em><b>Msgs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVENT_TYPE__MSGS = 3;

  /**
   * The feature id for the '<em><b>Channel</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVENT_TYPE__CHANNEL = 4;

  /**
   * The number of structural features of the '<em>Event Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVENT_TYPE_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.MsgImpl <em>Msg</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.MsgImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getMsg()
   * @generated
   */
  int MSG = 6;

  /**
   * The feature id for the '<em><b>Async sender</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MSG__ASYNC_SENDER = 0;

  /**
   * The feature id for the '<em><b>Receiver</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MSG__RECEIVER = 1;

  /**
   * The feature id for the '<em><b>Sender</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MSG__SENDER = 2;

  /**
   * The feature id for the '<em><b>Async receiver</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MSG__ASYNC_RECEIVER = 3;

  /**
   * The feature id for the '<em><b>Performative</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MSG__PERFORMATIVE = 4;

  /**
   * The feature id for the '<em><b>Content</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MSG__CONTENT = 5;

  /**
   * The feature id for the '<em><b>Conditions</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MSG__CONDITIONS = 6;

  /**
   * The number of structural features of the '<em>Msg</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MSG_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.ChannelImpl <em>Channel</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.ChannelImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getChannel()
   * @generated
   */
  int CHANNEL = 7;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHANNEL__NAME = 0;

  /**
   * The feature id for the '<em><b>Reliability</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHANNEL__RELIABILITY = 1;

  /**
   * The number of structural features of the '<em>Channel</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHANNEL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.RoleImpl <em>Role</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.RoleImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getRole()
   * @generated
   */
  int ROLE = 8;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROLE__NAME = 0;

  /**
   * The feature id for the '<em><b>Class</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROLE__CLASS = 1;

  /**
   * The feature id for the '<em><b>Args</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROLE__ARGS = 2;

  /**
   * The number of structural features of the '<em>Role</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROLE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.PartitionImpl <em>Partition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.PartitionImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getPartition()
   * @generated
   */
  int PARTITION = 9;

  /**
   * The feature id for the '<em><b>Constraints</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARTITION__CONSTRAINTS = 0;

  /**
   * The number of structural features of the '<em>Partition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARTITION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.TogetherImpl <em>Together</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TogetherImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getTogether()
   * @generated
   */
  int TOGETHER = 10;

  /**
   * The feature id for the '<em><b>Roles</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOGETHER__ROLES = 0;

  /**
   * The number of structural features of the '<em>Together</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOGETHER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.ConstraintImpl <em>Constraint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.ConstraintImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getConstraint()
   * @generated
   */
  int CONSTRAINT = 11;

  /**
   * The feature id for the '<em><b>Left</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__LEFT = 0;

  /**
   * The feature id for the '<em><b>Together</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__TOGETHER = 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__RIGHT = 2;

  /**
   * The feature id for the '<em><b>Split</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__SPLIT = 3;

  /**
   * The feature id for the '<em><b>Par Min</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__PAR_MIN = 4;

  /**
   * The feature id for the '<em><b>Par Max</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__PAR_MAX = 5;

  /**
   * The number of structural features of the '<em>Constraint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.AtomExpressionImpl <em>Atom Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.AtomExpressionImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getAtomExpression()
   * @generated
   */
  int ATOM_EXPRESSION = 12;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOM_EXPRESSION__LEFT = PROLOG_EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOM_EXPRESSION__OP = PROLOG_EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOM_EXPRESSION__RIGHT = PROLOG_EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Atom</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOM_EXPRESSION__ATOM = PROLOG_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Terms</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOM_EXPRESSION__TERMS = PROLOG_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Atom Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOM_EXPRESSION_FEATURE_COUNT = PROLOG_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.VariableExpressionImpl <em>Variable Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.VariableExpressionImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getVariableExpression()
   * @generated
   */
  int VARIABLE_EXPRESSION = 13;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_EXPRESSION__LEFT = PROLOG_EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_EXPRESSION__OP = PROLOG_EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_EXPRESSION__RIGHT = PROLOG_EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_EXPRESSION__NAME = PROLOG_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Variable Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_EXPRESSION_FEATURE_COUNT = PROLOG_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.StringExpressionImpl <em>String Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.StringExpressionImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getStringExpression()
   * @generated
   */
  int STRING_EXPRESSION = 14;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_EXPRESSION__LEFT = PROLOG_EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_EXPRESSION__OP = PROLOG_EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_EXPRESSION__RIGHT = PROLOG_EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_EXPRESSION__VALUE = PROLOG_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>String Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_EXPRESSION_FEATURE_COUNT = PROLOG_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.NumberExpressionImpl <em>Number Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.NumberExpressionImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getNumberExpression()
   * @generated
   */
  int NUMBER_EXPRESSION = 15;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_EXPRESSION__LEFT = PROLOG_EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_EXPRESSION__OP = PROLOG_EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_EXPRESSION__RIGHT = PROLOG_EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_EXPRESSION__VALUE = PROLOG_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Number Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_EXPRESSION_FEATURE_COUNT = PROLOG_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.ListExpressionImpl <em>List Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.ListExpressionImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getListExpression()
   * @generated
   */
  int LIST_EXPRESSION = 16;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION__LEFT = PROLOG_EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION__OP = PROLOG_EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION__RIGHT = PROLOG_EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Head</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION__HEAD = PROLOG_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION__TAIL = PROLOG_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>List Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_EXPRESSION_FEATURE_COUNT = PROLOG_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.AndExprImpl <em>And Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.AndExprImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getAndExpr()
   * @generated
   */
  int AND_EXPR = 17;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPR__VARIABLE = EXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>Body Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPR__BODY_VAR = EXPRESSION__BODY_VAR;

  /**
   * The feature id for the '<em><b>Type Filter</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPR__TYPE_FILTER = EXPRESSION__TYPE_FILTER;

  /**
   * The feature id for the '<em><b>First</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPR__FIRST = EXPRESSION__FIRST;

  /**
   * The feature id for the '<em><b>Exprs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPR__EXPRS = EXPRESSION__EXPRS;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPR__OPERATOR = EXPRESSION__OPERATOR;

  /**
   * The feature id for the '<em><b>Body Filter</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPR__BODY_FILTER = EXPRESSION__BODY_FILTER;

  /**
   * The feature id for the '<em><b>Type Seq</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPR__TYPE_SEQ = EXPRESSION__TYPE_SEQ;

  /**
   * The feature id for the '<em><b>Body Seq</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPR__BODY_SEQ = EXPRESSION__BODY_SEQ;

  /**
   * The feature id for the '<em><b>Eps</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPR__EPS = EXPRESSION__EPS;

  /**
   * The feature id for the '<em><b>Term</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPR__TERM = EXPRESSION__TERM;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPR__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPR__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPR__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>And Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPR_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.CatExprImpl <em>Cat Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.CatExprImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getCatExpr()
   * @generated
   */
  int CAT_EXPR = 18;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPR__VARIABLE = EXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>Body Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPR__BODY_VAR = EXPRESSION__BODY_VAR;

  /**
   * The feature id for the '<em><b>Type Filter</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPR__TYPE_FILTER = EXPRESSION__TYPE_FILTER;

  /**
   * The feature id for the '<em><b>First</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPR__FIRST = EXPRESSION__FIRST;

  /**
   * The feature id for the '<em><b>Exprs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPR__EXPRS = EXPRESSION__EXPRS;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPR__OPERATOR = EXPRESSION__OPERATOR;

  /**
   * The feature id for the '<em><b>Body Filter</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPR__BODY_FILTER = EXPRESSION__BODY_FILTER;

  /**
   * The feature id for the '<em><b>Type Seq</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPR__TYPE_SEQ = EXPRESSION__TYPE_SEQ;

  /**
   * The feature id for the '<em><b>Body Seq</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPR__BODY_SEQ = EXPRESSION__BODY_SEQ;

  /**
   * The feature id for the '<em><b>Eps</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPR__EPS = EXPRESSION__EPS;

  /**
   * The feature id for the '<em><b>Term</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPR__TERM = EXPRESSION__TERM;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPR__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPR__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPR__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Cat Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAT_EXPR_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.ShuffleExprImpl <em>Shuffle Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.ShuffleExprImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getShuffleExpr()
   * @generated
   */
  int SHUFFLE_EXPR = 19;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHUFFLE_EXPR__VARIABLE = EXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>Body Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHUFFLE_EXPR__BODY_VAR = EXPRESSION__BODY_VAR;

  /**
   * The feature id for the '<em><b>Type Filter</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHUFFLE_EXPR__TYPE_FILTER = EXPRESSION__TYPE_FILTER;

  /**
   * The feature id for the '<em><b>First</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHUFFLE_EXPR__FIRST = EXPRESSION__FIRST;

  /**
   * The feature id for the '<em><b>Exprs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHUFFLE_EXPR__EXPRS = EXPRESSION__EXPRS;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHUFFLE_EXPR__OPERATOR = EXPRESSION__OPERATOR;

  /**
   * The feature id for the '<em><b>Body Filter</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHUFFLE_EXPR__BODY_FILTER = EXPRESSION__BODY_FILTER;

  /**
   * The feature id for the '<em><b>Type Seq</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHUFFLE_EXPR__TYPE_SEQ = EXPRESSION__TYPE_SEQ;

  /**
   * The feature id for the '<em><b>Body Seq</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHUFFLE_EXPR__BODY_SEQ = EXPRESSION__BODY_SEQ;

  /**
   * The feature id for the '<em><b>Eps</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHUFFLE_EXPR__EPS = EXPRESSION__EPS;

  /**
   * The feature id for the '<em><b>Term</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHUFFLE_EXPR__TERM = EXPRESSION__TERM;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHUFFLE_EXPR__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHUFFLE_EXPR__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHUFFLE_EXPR__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Shuffle Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHUFFLE_EXPR_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.UnionExprImpl <em>Union Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.UnionExprImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getUnionExpr()
   * @generated
   */
  int UNION_EXPR = 20;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION_EXPR__VARIABLE = EXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>Body Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION_EXPR__BODY_VAR = EXPRESSION__BODY_VAR;

  /**
   * The feature id for the '<em><b>Type Filter</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION_EXPR__TYPE_FILTER = EXPRESSION__TYPE_FILTER;

  /**
   * The feature id for the '<em><b>First</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION_EXPR__FIRST = EXPRESSION__FIRST;

  /**
   * The feature id for the '<em><b>Exprs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION_EXPR__EXPRS = EXPRESSION__EXPRS;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION_EXPR__OPERATOR = EXPRESSION__OPERATOR;

  /**
   * The feature id for the '<em><b>Body Filter</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION_EXPR__BODY_FILTER = EXPRESSION__BODY_FILTER;

  /**
   * The feature id for the '<em><b>Type Seq</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION_EXPR__TYPE_SEQ = EXPRESSION__TYPE_SEQ;

  /**
   * The feature id for the '<em><b>Body Seq</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION_EXPR__BODY_SEQ = EXPRESSION__BODY_SEQ;

  /**
   * The feature id for the '<em><b>Eps</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION_EXPR__EPS = EXPRESSION__EPS;

  /**
   * The feature id for the '<em><b>Term</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION_EXPR__TERM = EXPRESSION__TERM;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION_EXPR__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION_EXPR__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION_EXPR__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Union Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION_EXPR_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.SeqExprImpl <em>Seq Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.SeqExprImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getSeqExpr()
   * @generated
   */
  int SEQ_EXPR = 21;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQ_EXPR__VARIABLE = EXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>Body Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQ_EXPR__BODY_VAR = EXPRESSION__BODY_VAR;

  /**
   * The feature id for the '<em><b>Type Filter</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQ_EXPR__TYPE_FILTER = EXPRESSION__TYPE_FILTER;

  /**
   * The feature id for the '<em><b>First</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQ_EXPR__FIRST = EXPRESSION__FIRST;

  /**
   * The feature id for the '<em><b>Exprs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQ_EXPR__EXPRS = EXPRESSION__EXPRS;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQ_EXPR__OPERATOR = EXPRESSION__OPERATOR;

  /**
   * The feature id for the '<em><b>Body Filter</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQ_EXPR__BODY_FILTER = EXPRESSION__BODY_FILTER;

  /**
   * The feature id for the '<em><b>Type Seq</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQ_EXPR__TYPE_SEQ = EXPRESSION__TYPE_SEQ;

  /**
   * The feature id for the '<em><b>Body Seq</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQ_EXPR__BODY_SEQ = EXPRESSION__BODY_SEQ;

  /**
   * The feature id for the '<em><b>Eps</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQ_EXPR__EPS = EXPRESSION__EPS;

  /**
   * The feature id for the '<em><b>Term</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQ_EXPR__TERM = EXPRESSION__TERM;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQ_EXPR__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Seq Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQ_EXPR__SEQ_EXPR = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Seq Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQ_EXPR_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.FilterExprImpl <em>Filter Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.FilterExprImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getFilterExpr()
   * @generated
   */
  int FILTER_EXPR = 22;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPR__VARIABLE = EXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>Body Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPR__BODY_VAR = EXPRESSION__BODY_VAR;

  /**
   * The feature id for the '<em><b>Type Filter</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPR__TYPE_FILTER = EXPRESSION__TYPE_FILTER;

  /**
   * The feature id for the '<em><b>First</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPR__FIRST = EXPRESSION__FIRST;

  /**
   * The feature id for the '<em><b>Exprs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPR__EXPRS = EXPRESSION__EXPRS;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPR__OPERATOR = EXPRESSION__OPERATOR;

  /**
   * The feature id for the '<em><b>Body Filter</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPR__BODY_FILTER = EXPRESSION__BODY_FILTER;

  /**
   * The feature id for the '<em><b>Type Seq</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPR__TYPE_SEQ = EXPRESSION__TYPE_SEQ;

  /**
   * The feature id for the '<em><b>Body Seq</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPR__BODY_SEQ = EXPRESSION__BODY_SEQ;

  /**
   * The feature id for the '<em><b>Eps</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPR__EPS = EXPRESSION__EPS;

  /**
   * The feature id for the '<em><b>Term</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPR__TERM = EXPRESSION__TERM;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPR__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Filter Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPR__FILTER_EXPR = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Filter Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPR_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.VarExprImpl <em>Var Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.VarExprImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getVarExpr()
   * @generated
   */
  int VAR_EXPR = 23;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_EXPR__VARIABLE = EXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>Body Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_EXPR__BODY_VAR = EXPRESSION__BODY_VAR;

  /**
   * The feature id for the '<em><b>Type Filter</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_EXPR__TYPE_FILTER = EXPRESSION__TYPE_FILTER;

  /**
   * The feature id for the '<em><b>First</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_EXPR__FIRST = EXPRESSION__FIRST;

  /**
   * The feature id for the '<em><b>Exprs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_EXPR__EXPRS = EXPRESSION__EXPRS;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_EXPR__OPERATOR = EXPRESSION__OPERATOR;

  /**
   * The feature id for the '<em><b>Body Filter</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_EXPR__BODY_FILTER = EXPRESSION__BODY_FILTER;

  /**
   * The feature id for the '<em><b>Type Seq</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_EXPR__TYPE_SEQ = EXPRESSION__TYPE_SEQ;

  /**
   * The feature id for the '<em><b>Body Seq</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_EXPR__BODY_SEQ = EXPRESSION__BODY_SEQ;

  /**
   * The feature id for the '<em><b>Eps</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_EXPR__EPS = EXPRESSION__EPS;

  /**
   * The feature id for the '<em><b>Term</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_EXPR__TERM = EXPRESSION__TERM;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_EXPR__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Var Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_EXPR__VAR_EXPR = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Var Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_EXPR_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.TerminalExprImpl <em>Terminal Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TerminalExprImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getTerminalExpr()
   * @generated
   */
  int TERMINAL_EXPR = 24;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_EXPR__VARIABLE = EXPRESSION__VARIABLE;

  /**
   * The feature id for the '<em><b>Body Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_EXPR__BODY_VAR = EXPRESSION__BODY_VAR;

  /**
   * The feature id for the '<em><b>Type Filter</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_EXPR__TYPE_FILTER = EXPRESSION__TYPE_FILTER;

  /**
   * The feature id for the '<em><b>First</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_EXPR__FIRST = EXPRESSION__FIRST;

  /**
   * The feature id for the '<em><b>Exprs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_EXPR__EXPRS = EXPRESSION__EXPRS;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_EXPR__OPERATOR = EXPRESSION__OPERATOR;

  /**
   * The feature id for the '<em><b>Body Filter</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_EXPR__BODY_FILTER = EXPRESSION__BODY_FILTER;

  /**
   * The feature id for the '<em><b>Type Seq</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_EXPR__TYPE_SEQ = EXPRESSION__TYPE_SEQ;

  /**
   * The feature id for the '<em><b>Body Seq</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_EXPR__BODY_SEQ = EXPRESSION__BODY_SEQ;

  /**
   * The feature id for the '<em><b>Eps</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_EXPR__EPS = EXPRESSION__EPS;

  /**
   * The feature id for the '<em><b>Term</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_EXPR__TERM = EXPRESSION__TERM;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_EXPR__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Terminal Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_EXPR__TERMINAL_EXPR = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Terminal Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_EXPR_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.SingletonsImpl <em>Singletons</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.SingletonsImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getSingletons()
   * @generated
   */
  int SINGLETONS = 25;

  /**
   * The feature id for the '<em><b>Left</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLETONS__LEFT = CONSTRAINT__LEFT;

  /**
   * The feature id for the '<em><b>Together</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLETONS__TOGETHER = CONSTRAINT__TOGETHER;

  /**
   * The feature id for the '<em><b>Right</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLETONS__RIGHT = CONSTRAINT__RIGHT;

  /**
   * The feature id for the '<em><b>Split</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLETONS__SPLIT = CONSTRAINT__SPLIT;

  /**
   * The feature id for the '<em><b>Par Min</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLETONS__PAR_MIN = CONSTRAINT__PAR_MIN;

  /**
   * The feature id for the '<em><b>Par Max</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLETONS__PAR_MAX = CONSTRAINT__PAR_MAX;

  /**
   * The feature id for the '<em><b>Min Singletons</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLETONS__MIN_SINGLETONS = CONSTRAINT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Max Singletons</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLETONS__MAX_SINGLETONS = CONSTRAINT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Singletons</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLETONS_FEATURE_COUNT = CONSTRAINT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.SizeImpl <em>Size</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.SizeImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getSize()
   * @generated
   */
  int SIZE = 26;

  /**
   * The feature id for the '<em><b>Left</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZE__LEFT = CONSTRAINT__LEFT;

  /**
   * The feature id for the '<em><b>Together</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZE__TOGETHER = CONSTRAINT__TOGETHER;

  /**
   * The feature id for the '<em><b>Right</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZE__RIGHT = CONSTRAINT__RIGHT;

  /**
   * The feature id for the '<em><b>Split</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZE__SPLIT = CONSTRAINT__SPLIT;

  /**
   * The feature id for the '<em><b>Par Min</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZE__PAR_MIN = CONSTRAINT__PAR_MIN;

  /**
   * The feature id for the '<em><b>Par Max</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZE__PAR_MAX = CONSTRAINT__PAR_MAX;

  /**
   * The feature id for the '<em><b>Min Size</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZE__MIN_SIZE = CONSTRAINT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Max Size</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZE__MAX_SIZE = CONSTRAINT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Size</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZE_FEATURE_COUNT = CONSTRAINT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.CardinalityImpl <em>Cardinality</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unige.dibris.trace_expression_language.tExp.impl.CardinalityImpl
   * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getCardinality()
   * @generated
   */
  int CARDINALITY = 27;

  /**
   * The feature id for the '<em><b>Left</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CARDINALITY__LEFT = CONSTRAINT__LEFT;

  /**
   * The feature id for the '<em><b>Together</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CARDINALITY__TOGETHER = CONSTRAINT__TOGETHER;

  /**
   * The feature id for the '<em><b>Right</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CARDINALITY__RIGHT = CONSTRAINT__RIGHT;

  /**
   * The feature id for the '<em><b>Split</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CARDINALITY__SPLIT = CONSTRAINT__SPLIT;

  /**
   * The feature id for the '<em><b>Par Min</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CARDINALITY__PAR_MIN = CONSTRAINT__PAR_MIN;

  /**
   * The feature id for the '<em><b>Par Max</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CARDINALITY__PAR_MAX = CONSTRAINT__PAR_MAX;

  /**
   * The feature id for the '<em><b>Min Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CARDINALITY__MIN_CARDINALITY = CONSTRAINT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Max Cardinality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CARDINALITY__MAX_CARDINALITY = CONSTRAINT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Cardinality</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CARDINALITY_FEATURE_COUNT = CONSTRAINT_FEATURE_COUNT + 2;


  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.Domainmodel <em>Domainmodel</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Domainmodel</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Domainmodel
   * @generated
   */
  EClass getDomainmodel();

  /**
   * Returns the meta object for the containment reference list '{@link it.unige.dibris.trace_expression_language.tExp.Domainmodel#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Domainmodel#getElements()
   * @see #getDomainmodel()
   * @generated
   */
  EReference getDomainmodel_Elements();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.PrologExpression <em>Prolog Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Prolog Expression</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.PrologExpression
   * @generated
   */
  EClass getPrologExpression();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.PrologExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.PrologExpression#getLeft()
   * @see #getPrologExpression()
   * @generated
   */
  EReference getPrologExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.PrologExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.PrologExpression#getOp()
   * @see #getPrologExpression()
   * @generated
   */
  EAttribute getPrologExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.PrologExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.PrologExpression#getRight()
   * @see #getPrologExpression()
   * @generated
   */
  EReference getPrologExpression_Right();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression <em>Trace Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Trace Expression</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression
   * @generated
   */
  EClass getTraceExpression();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getName()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_Name();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getBodyL <em>Body L</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Body L</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getBodyL()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_BodyL();

  /**
   * Returns the meta object for the containment reference list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getTerms <em>Terms</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Terms</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getTerms()
   * @see #getTraceExpression()
   * @generated
   */
  EReference getTraceExpression_Terms();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getRolesL <em>Roles L</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Roles L</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getRolesL()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_RolesL();

  /**
   * Returns the meta object for the containment reference list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getRoles <em>Roles</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Roles</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getRoles()
   * @see #getTraceExpression()
   * @generated
   */
  EReference getTraceExpression_Roles();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getTypesL <em>Types L</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Types L</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getTypesL()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_TypesL();

  /**
   * Returns the meta object for the containment reference list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getTypes <em>Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Types</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getTypes()
   * @see #getTraceExpression()
   * @generated
   */
  EReference getTraceExpression_Types();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getModulesL <em>Modules L</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Modules L</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getModulesL()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_ModulesL();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getModules <em>Modules</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Modules</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getModules()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_Modules();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getDecentralizedL <em>Decentralized L</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Decentralized L</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getDecentralizedL()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_DecentralizedL();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getDecentralized <em>Decentralized</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Decentralized</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getDecentralized()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_Decentralized();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getPartitionL <em>Partition L</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Partition L</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getPartitionL()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_PartitionL();

  /**
   * Returns the meta object for the containment reference list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getPartition <em>Partition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Partition</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getPartition()
   * @see #getTraceExpression()
   * @generated
   */
  EReference getTraceExpression_Partition();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getConstraintsL <em>Constraints L</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Constraints L</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getConstraintsL()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_ConstraintsL();

  /**
   * Returns the meta object for the containment reference list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getConstraints <em>Constraints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constraints</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getConstraints()
   * @see #getTraceExpression()
   * @generated
   */
  EReference getTraceExpression_Constraints();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getGuiL <em>Gui L</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Gui L</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getGuiL()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_GuiL();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getGui <em>Gui</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Gui</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getGui()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_Gui();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getMinimalL <em>Minimal L</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Minimal L</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getMinimalL()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_MinimalL();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getMinimal <em>Minimal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Minimal</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getMinimal()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_Minimal();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getThresholdL <em>Threshold L</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Threshold L</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getThresholdL()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_ThresholdL();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getThreshold <em>Threshold</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Threshold</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getThreshold()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_Threshold();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getChannelsL <em>Channels L</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Channels L</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getChannelsL()
   * @see #getTraceExpression()
   * @generated
   */
  EAttribute getTraceExpression_ChannelsL();

  /**
   * Returns the meta object for the containment reference list '{@link it.unige.dibris.trace_expression_language.tExp.TraceExpression#getChannels <em>Channels</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Channels</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TraceExpression#getChannels()
   * @see #getTraceExpression()
   * @generated
   */
  EReference getTraceExpression_Channels();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.Term <em>Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Term</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Term
   * @generated
   */
  EClass getTerm();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Term#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Term#getName()
   * @see #getTerm()
   * @generated
   */
  EAttribute getTerm_Name();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.Term#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Term#getExpr()
   * @see #getTerm()
   * @generated
   */
  EReference getTerm_Expr();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Variable</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Expression#getVariable()
   * @see #getExpression()
   * @generated
   */
  EAttribute getExpression_Variable();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getBodyVar <em>Body Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body Var</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Expression#getBodyVar()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_BodyVar();

  /**
   * Returns the meta object for the reference '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getTypeFilter <em>Type Filter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Type Filter</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Expression#getTypeFilter()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_TypeFilter();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getFirst <em>First</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>First</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Expression#getFirst()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_First();

  /**
   * Returns the meta object for the containment reference list '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getExprs <em>Exprs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exprs</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Expression#getExprs()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Exprs();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Expression#getOperator()
   * @see #getExpression()
   * @generated
   */
  EAttribute getExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getBodyFilter <em>Body Filter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body Filter</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Expression#getBodyFilter()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_BodyFilter();

  /**
   * Returns the meta object for the reference '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getTypeSeq <em>Type Seq</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Type Seq</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Expression#getTypeSeq()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_TypeSeq();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getBodySeq <em>Body Seq</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body Seq</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Expression#getBodySeq()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_BodySeq();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getEps <em>Eps</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Eps</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Expression#getEps()
   * @see #getExpression()
   * @generated
   */
  EAttribute getExpression_Eps();

  /**
   * Returns the meta object for the reference '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getTerm <em>Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Term</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Expression#getTerm()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Term();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.Expression#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Expression#getExpr()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Expr();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.EventType <em>Event Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Event Type</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.EventType
   * @generated
   */
  EClass getEventType();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.EventType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.EventType#getName()
   * @see #getEventType()
   * @generated
   */
  EAttribute getEventType_Name();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.EventType#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.EventType#getExpr()
   * @see #getEventType()
   * @generated
   */
  EReference getEventType_Expr();

  /**
   * Returns the meta object for the containment reference list '{@link it.unige.dibris.trace_expression_language.tExp.EventType#getExprs <em>Exprs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exprs</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.EventType#getExprs()
   * @see #getEventType()
   * @generated
   */
  EReference getEventType_Exprs();

  /**
   * Returns the meta object for the containment reference list '{@link it.unige.dibris.trace_expression_language.tExp.EventType#getMsgs <em>Msgs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Msgs</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.EventType#getMsgs()
   * @see #getEventType()
   * @generated
   */
  EReference getEventType_Msgs();

  /**
   * Returns the meta object for the reference '{@link it.unige.dibris.trace_expression_language.tExp.EventType#getChannel <em>Channel</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Channel</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.EventType#getChannel()
   * @see #getEventType()
   * @generated
   */
  EReference getEventType_Channel();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.Msg <em>Msg</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Msg</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Msg
   * @generated
   */
  EClass getMsg();

  /**
   * Returns the meta object for the reference '{@link it.unige.dibris.trace_expression_language.tExp.Msg#getAsync_sender <em>Async sender</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Async sender</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Msg#getAsync_sender()
   * @see #getMsg()
   * @generated
   */
  EReference getMsg_Async_sender();

  /**
   * Returns the meta object for the reference '{@link it.unige.dibris.trace_expression_language.tExp.Msg#getReceiver <em>Receiver</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Receiver</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Msg#getReceiver()
   * @see #getMsg()
   * @generated
   */
  EReference getMsg_Receiver();

  /**
   * Returns the meta object for the reference '{@link it.unige.dibris.trace_expression_language.tExp.Msg#getSender <em>Sender</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Sender</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Msg#getSender()
   * @see #getMsg()
   * @generated
   */
  EReference getMsg_Sender();

  /**
   * Returns the meta object for the reference '{@link it.unige.dibris.trace_expression_language.tExp.Msg#getAsync_receiver <em>Async receiver</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Async receiver</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Msg#getAsync_receiver()
   * @see #getMsg()
   * @generated
   */
  EReference getMsg_Async_receiver();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Msg#getPerformative <em>Performative</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Performative</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Msg#getPerformative()
   * @see #getMsg()
   * @generated
   */
  EAttribute getMsg_Performative();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.Msg#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Content</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Msg#getContent()
   * @see #getMsg()
   * @generated
   */
  EReference getMsg_Content();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.Msg#getConditions <em>Conditions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Conditions</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Msg#getConditions()
   * @see #getMsg()
   * @generated
   */
  EReference getMsg_Conditions();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.Channel <em>Channel</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Channel</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Channel
   * @generated
   */
  EClass getChannel();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Channel#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Channel#getName()
   * @see #getChannel()
   * @generated
   */
  EAttribute getChannel_Name();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Channel#getReliability <em>Reliability</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Reliability</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Channel#getReliability()
   * @see #getChannel()
   * @generated
   */
  EAttribute getChannel_Reliability();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.Role <em>Role</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Role</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Role
   * @generated
   */
  EClass getRole();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Role#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Role#getName()
   * @see #getRole()
   * @generated
   */
  EAttribute getRole_Name();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Role#getClass_ <em>Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Class</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Role#getClass_()
   * @see #getRole()
   * @generated
   */
  EAttribute getRole_Class();

  /**
   * Returns the meta object for the attribute list '{@link it.unige.dibris.trace_expression_language.tExp.Role#getArgs <em>Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Args</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Role#getArgs()
   * @see #getRole()
   * @generated
   */
  EAttribute getRole_Args();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.Partition <em>Partition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Partition</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Partition
   * @generated
   */
  EClass getPartition();

  /**
   * Returns the meta object for the containment reference list '{@link it.unige.dibris.trace_expression_language.tExp.Partition#getConstraints <em>Constraints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constraints</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Partition#getConstraints()
   * @see #getPartition()
   * @generated
   */
  EReference getPartition_Constraints();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.Together <em>Together</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Together</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Together
   * @generated
   */
  EClass getTogether();

  /**
   * Returns the meta object for the reference list '{@link it.unige.dibris.trace_expression_language.tExp.Together#getRoles <em>Roles</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Roles</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Together#getRoles()
   * @see #getTogether()
   * @generated
   */
  EReference getTogether_Roles();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.Constraint <em>Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constraint</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Constraint
   * @generated
   */
  EClass getConstraint();

  /**
   * Returns the meta object for the reference list '{@link it.unige.dibris.trace_expression_language.tExp.Constraint#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Left</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Constraint#getLeft()
   * @see #getConstraint()
   * @generated
   */
  EReference getConstraint_Left();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Constraint#getTogether <em>Together</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Together</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Constraint#getTogether()
   * @see #getConstraint()
   * @generated
   */
  EAttribute getConstraint_Together();

  /**
   * Returns the meta object for the reference list '{@link it.unige.dibris.trace_expression_language.tExp.Constraint#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Right</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Constraint#getRight()
   * @see #getConstraint()
   * @generated
   */
  EReference getConstraint_Right();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Constraint#getSplit <em>Split</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Split</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Constraint#getSplit()
   * @see #getConstraint()
   * @generated
   */
  EAttribute getConstraint_Split();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Constraint#getParMin <em>Par Min</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Par Min</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Constraint#getParMin()
   * @see #getConstraint()
   * @generated
   */
  EAttribute getConstraint_ParMin();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Constraint#getParMax <em>Par Max</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Par Max</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Constraint#getParMax()
   * @see #getConstraint()
   * @generated
   */
  EAttribute getConstraint_ParMax();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.AtomExpression <em>Atom Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Atom Expression</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.AtomExpression
   * @generated
   */
  EClass getAtomExpression();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.AtomExpression#getAtom <em>Atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Atom</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.AtomExpression#getAtom()
   * @see #getAtomExpression()
   * @generated
   */
  EAttribute getAtomExpression_Atom();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.AtomExpression#getTerms <em>Terms</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Terms</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.AtomExpression#getTerms()
   * @see #getAtomExpression()
   * @generated
   */
  EReference getAtomExpression_Terms();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.VariableExpression <em>Variable Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Expression</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.VariableExpression
   * @generated
   */
  EClass getVariableExpression();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.VariableExpression#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.VariableExpression#getName()
   * @see #getVariableExpression()
   * @generated
   */
  EAttribute getVariableExpression_Name();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.StringExpression <em>String Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Expression</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.StringExpression
   * @generated
   */
  EClass getStringExpression();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.StringExpression#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.StringExpression#getValue()
   * @see #getStringExpression()
   * @generated
   */
  EAttribute getStringExpression_Value();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.NumberExpression <em>Number Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Number Expression</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.NumberExpression
   * @generated
   */
  EClass getNumberExpression();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.NumberExpression#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.NumberExpression#getValue()
   * @see #getNumberExpression()
   * @generated
   */
  EAttribute getNumberExpression_Value();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.ListExpression <em>List Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>List Expression</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.ListExpression
   * @generated
   */
  EClass getListExpression();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.ListExpression#getHead <em>Head</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Head</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.ListExpression#getHead()
   * @see #getListExpression()
   * @generated
   */
  EReference getListExpression_Head();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.ListExpression#getTail <em>Tail</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Tail</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.ListExpression#getTail()
   * @see #getListExpression()
   * @generated
   */
  EReference getListExpression_Tail();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.AndExpr <em>And Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>And Expr</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.AndExpr
   * @generated
   */
  EClass getAndExpr();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.AndExpr#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.AndExpr#getLeft()
   * @see #getAndExpr()
   * @generated
   */
  EReference getAndExpr_Left();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.AndExpr#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.AndExpr#getRight()
   * @see #getAndExpr()
   * @generated
   */
  EReference getAndExpr_Right();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.CatExpr <em>Cat Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cat Expr</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.CatExpr
   * @generated
   */
  EClass getCatExpr();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.CatExpr#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.CatExpr#getLeft()
   * @see #getCatExpr()
   * @generated
   */
  EReference getCatExpr_Left();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.CatExpr#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.CatExpr#getRight()
   * @see #getCatExpr()
   * @generated
   */
  EReference getCatExpr_Right();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.ShuffleExpr <em>Shuffle Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Shuffle Expr</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.ShuffleExpr
   * @generated
   */
  EClass getShuffleExpr();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.ShuffleExpr#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.ShuffleExpr#getLeft()
   * @see #getShuffleExpr()
   * @generated
   */
  EReference getShuffleExpr_Left();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.ShuffleExpr#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.ShuffleExpr#getRight()
   * @see #getShuffleExpr()
   * @generated
   */
  EReference getShuffleExpr_Right();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.UnionExpr <em>Union Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Union Expr</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.UnionExpr
   * @generated
   */
  EClass getUnionExpr();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.UnionExpr#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.UnionExpr#getLeft()
   * @see #getUnionExpr()
   * @generated
   */
  EReference getUnionExpr_Left();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.UnionExpr#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.UnionExpr#getRight()
   * @see #getUnionExpr()
   * @generated
   */
  EReference getUnionExpr_Right();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.SeqExpr <em>Seq Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Seq Expr</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.SeqExpr
   * @generated
   */
  EClass getSeqExpr();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.SeqExpr#getSeqExpr <em>Seq Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Seq Expr</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.SeqExpr#getSeqExpr()
   * @see #getSeqExpr()
   * @generated
   */
  EReference getSeqExpr_SeqExpr();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.FilterExpr <em>Filter Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Filter Expr</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.FilterExpr
   * @generated
   */
  EClass getFilterExpr();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.FilterExpr#getFilterExpr <em>Filter Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Filter Expr</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.FilterExpr#getFilterExpr()
   * @see #getFilterExpr()
   * @generated
   */
  EReference getFilterExpr_FilterExpr();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.VarExpr <em>Var Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Expr</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.VarExpr
   * @generated
   */
  EClass getVarExpr();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.VarExpr#getVarExpr <em>Var Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Var Expr</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.VarExpr#getVarExpr()
   * @see #getVarExpr()
   * @generated
   */
  EReference getVarExpr_VarExpr();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.TerminalExpr <em>Terminal Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Terminal Expr</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TerminalExpr
   * @generated
   */
  EClass getTerminalExpr();

  /**
   * Returns the meta object for the containment reference '{@link it.unige.dibris.trace_expression_language.tExp.TerminalExpr#getTerminalExpr <em>Terminal Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Terminal Expr</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.TerminalExpr#getTerminalExpr()
   * @see #getTerminalExpr()
   * @generated
   */
  EReference getTerminalExpr_TerminalExpr();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.Singletons <em>Singletons</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Singletons</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Singletons
   * @generated
   */
  EClass getSingletons();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Singletons#getMinSingletons <em>Min Singletons</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min Singletons</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Singletons#getMinSingletons()
   * @see #getSingletons()
   * @generated
   */
  EAttribute getSingletons_MinSingletons();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Singletons#getMaxSingletons <em>Max Singletons</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max Singletons</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Singletons#getMaxSingletons()
   * @see #getSingletons()
   * @generated
   */
  EAttribute getSingletons_MaxSingletons();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.Size <em>Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Size</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Size
   * @generated
   */
  EClass getSize();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Size#getMinSize <em>Min Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min Size</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Size#getMinSize()
   * @see #getSize()
   * @generated
   */
  EAttribute getSize_MinSize();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Size#getMaxSize <em>Max Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max Size</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Size#getMaxSize()
   * @see #getSize()
   * @generated
   */
  EAttribute getSize_MaxSize();

  /**
   * Returns the meta object for class '{@link it.unige.dibris.trace_expression_language.tExp.Cardinality <em>Cardinality</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cardinality</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Cardinality
   * @generated
   */
  EClass getCardinality();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Cardinality#getMinCardinality <em>Min Cardinality</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min Cardinality</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Cardinality#getMinCardinality()
   * @see #getCardinality()
   * @generated
   */
  EAttribute getCardinality_MinCardinality();

  /**
   * Returns the meta object for the attribute '{@link it.unige.dibris.trace_expression_language.tExp.Cardinality#getMaxCardinality <em>Max Cardinality</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max Cardinality</em>'.
   * @see it.unige.dibris.trace_expression_language.tExp.Cardinality#getMaxCardinality()
   * @see #getCardinality()
   * @generated
   */
  EAttribute getCardinality_MaxCardinality();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  TExpFactory getTExpFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.DomainmodelImpl <em>Domainmodel</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.DomainmodelImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getDomainmodel()
     * @generated
     */
    EClass DOMAINMODEL = eINSTANCE.getDomainmodel();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DOMAINMODEL__ELEMENTS = eINSTANCE.getDomainmodel_Elements();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.PrologExpressionImpl <em>Prolog Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.PrologExpressionImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getPrologExpression()
     * @generated
     */
    EClass PROLOG_EXPRESSION = eINSTANCE.getPrologExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROLOG_EXPRESSION__LEFT = eINSTANCE.getPrologExpression_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROLOG_EXPRESSION__OP = eINSTANCE.getPrologExpression_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROLOG_EXPRESSION__RIGHT = eINSTANCE.getPrologExpression_Right();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.TraceExpressionImpl <em>Trace Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TraceExpressionImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getTraceExpression()
     * @generated
     */
    EClass TRACE_EXPRESSION = eINSTANCE.getTraceExpression();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__NAME = eINSTANCE.getTraceExpression_Name();

    /**
     * The meta object literal for the '<em><b>Body L</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__BODY_L = eINSTANCE.getTraceExpression_BodyL();

    /**
     * The meta object literal for the '<em><b>Terms</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRACE_EXPRESSION__TERMS = eINSTANCE.getTraceExpression_Terms();

    /**
     * The meta object literal for the '<em><b>Roles L</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__ROLES_L = eINSTANCE.getTraceExpression_RolesL();

    /**
     * The meta object literal for the '<em><b>Roles</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRACE_EXPRESSION__ROLES = eINSTANCE.getTraceExpression_Roles();

    /**
     * The meta object literal for the '<em><b>Types L</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__TYPES_L = eINSTANCE.getTraceExpression_TypesL();

    /**
     * The meta object literal for the '<em><b>Types</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRACE_EXPRESSION__TYPES = eINSTANCE.getTraceExpression_Types();

    /**
     * The meta object literal for the '<em><b>Modules L</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__MODULES_L = eINSTANCE.getTraceExpression_ModulesL();

    /**
     * The meta object literal for the '<em><b>Modules</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__MODULES = eINSTANCE.getTraceExpression_Modules();

    /**
     * The meta object literal for the '<em><b>Decentralized L</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__DECENTRALIZED_L = eINSTANCE.getTraceExpression_DecentralizedL();

    /**
     * The meta object literal for the '<em><b>Decentralized</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__DECENTRALIZED = eINSTANCE.getTraceExpression_Decentralized();

    /**
     * The meta object literal for the '<em><b>Partition L</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__PARTITION_L = eINSTANCE.getTraceExpression_PartitionL();

    /**
     * The meta object literal for the '<em><b>Partition</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRACE_EXPRESSION__PARTITION = eINSTANCE.getTraceExpression_Partition();

    /**
     * The meta object literal for the '<em><b>Constraints L</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__CONSTRAINTS_L = eINSTANCE.getTraceExpression_ConstraintsL();

    /**
     * The meta object literal for the '<em><b>Constraints</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRACE_EXPRESSION__CONSTRAINTS = eINSTANCE.getTraceExpression_Constraints();

    /**
     * The meta object literal for the '<em><b>Gui L</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__GUI_L = eINSTANCE.getTraceExpression_GuiL();

    /**
     * The meta object literal for the '<em><b>Gui</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__GUI = eINSTANCE.getTraceExpression_Gui();

    /**
     * The meta object literal for the '<em><b>Minimal L</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__MINIMAL_L = eINSTANCE.getTraceExpression_MinimalL();

    /**
     * The meta object literal for the '<em><b>Minimal</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__MINIMAL = eINSTANCE.getTraceExpression_Minimal();

    /**
     * The meta object literal for the '<em><b>Threshold L</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__THRESHOLD_L = eINSTANCE.getTraceExpression_ThresholdL();

    /**
     * The meta object literal for the '<em><b>Threshold</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__THRESHOLD = eINSTANCE.getTraceExpression_Threshold();

    /**
     * The meta object literal for the '<em><b>Channels L</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRACE_EXPRESSION__CHANNELS_L = eINSTANCE.getTraceExpression_ChannelsL();

    /**
     * The meta object literal for the '<em><b>Channels</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRACE_EXPRESSION__CHANNELS = eINSTANCE.getTraceExpression_Channels();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.TermImpl <em>Term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TermImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getTerm()
     * @generated
     */
    EClass TERM = eINSTANCE.getTerm();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TERM__NAME = eINSTANCE.getTerm_Name();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TERM__EXPR = eINSTANCE.getTerm_Expr();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.ExpressionImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION__VARIABLE = eINSTANCE.getExpression_Variable();

    /**
     * The meta object literal for the '<em><b>Body Var</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__BODY_VAR = eINSTANCE.getExpression_BodyVar();

    /**
     * The meta object literal for the '<em><b>Type Filter</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__TYPE_FILTER = eINSTANCE.getExpression_TypeFilter();

    /**
     * The meta object literal for the '<em><b>First</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__FIRST = eINSTANCE.getExpression_First();

    /**
     * The meta object literal for the '<em><b>Exprs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__EXPRS = eINSTANCE.getExpression_Exprs();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION__OPERATOR = eINSTANCE.getExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Body Filter</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__BODY_FILTER = eINSTANCE.getExpression_BodyFilter();

    /**
     * The meta object literal for the '<em><b>Type Seq</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__TYPE_SEQ = eINSTANCE.getExpression_TypeSeq();

    /**
     * The meta object literal for the '<em><b>Body Seq</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__BODY_SEQ = eINSTANCE.getExpression_BodySeq();

    /**
     * The meta object literal for the '<em><b>Eps</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION__EPS = eINSTANCE.getExpression_Eps();

    /**
     * The meta object literal for the '<em><b>Term</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__TERM = eINSTANCE.getExpression_Term();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__EXPR = eINSTANCE.getExpression_Expr();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.EventTypeImpl <em>Event Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.EventTypeImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getEventType()
     * @generated
     */
    EClass EVENT_TYPE = eINSTANCE.getEventType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EVENT_TYPE__NAME = eINSTANCE.getEventType_Name();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EVENT_TYPE__EXPR = eINSTANCE.getEventType_Expr();

    /**
     * The meta object literal for the '<em><b>Exprs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EVENT_TYPE__EXPRS = eINSTANCE.getEventType_Exprs();

    /**
     * The meta object literal for the '<em><b>Msgs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EVENT_TYPE__MSGS = eINSTANCE.getEventType_Msgs();

    /**
     * The meta object literal for the '<em><b>Channel</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EVENT_TYPE__CHANNEL = eINSTANCE.getEventType_Channel();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.MsgImpl <em>Msg</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.MsgImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getMsg()
     * @generated
     */
    EClass MSG = eINSTANCE.getMsg();

    /**
     * The meta object literal for the '<em><b>Async sender</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MSG__ASYNC_SENDER = eINSTANCE.getMsg_Async_sender();

    /**
     * The meta object literal for the '<em><b>Receiver</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MSG__RECEIVER = eINSTANCE.getMsg_Receiver();

    /**
     * The meta object literal for the '<em><b>Sender</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MSG__SENDER = eINSTANCE.getMsg_Sender();

    /**
     * The meta object literal for the '<em><b>Async receiver</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MSG__ASYNC_RECEIVER = eINSTANCE.getMsg_Async_receiver();

    /**
     * The meta object literal for the '<em><b>Performative</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MSG__PERFORMATIVE = eINSTANCE.getMsg_Performative();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MSG__CONTENT = eINSTANCE.getMsg_Content();

    /**
     * The meta object literal for the '<em><b>Conditions</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MSG__CONDITIONS = eINSTANCE.getMsg_Conditions();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.ChannelImpl <em>Channel</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.ChannelImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getChannel()
     * @generated
     */
    EClass CHANNEL = eINSTANCE.getChannel();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHANNEL__NAME = eINSTANCE.getChannel_Name();

    /**
     * The meta object literal for the '<em><b>Reliability</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHANNEL__RELIABILITY = eINSTANCE.getChannel_Reliability();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.RoleImpl <em>Role</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.RoleImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getRole()
     * @generated
     */
    EClass ROLE = eINSTANCE.getRole();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ROLE__NAME = eINSTANCE.getRole_Name();

    /**
     * The meta object literal for the '<em><b>Class</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ROLE__CLASS = eINSTANCE.getRole_Class();

    /**
     * The meta object literal for the '<em><b>Args</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ROLE__ARGS = eINSTANCE.getRole_Args();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.PartitionImpl <em>Partition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.PartitionImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getPartition()
     * @generated
     */
    EClass PARTITION = eINSTANCE.getPartition();

    /**
     * The meta object literal for the '<em><b>Constraints</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARTITION__CONSTRAINTS = eINSTANCE.getPartition_Constraints();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.TogetherImpl <em>Together</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TogetherImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getTogether()
     * @generated
     */
    EClass TOGETHER = eINSTANCE.getTogether();

    /**
     * The meta object literal for the '<em><b>Roles</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TOGETHER__ROLES = eINSTANCE.getTogether_Roles();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.ConstraintImpl <em>Constraint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.ConstraintImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getConstraint()
     * @generated
     */
    EClass CONSTRAINT = eINSTANCE.getConstraint();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINT__LEFT = eINSTANCE.getConstraint_Left();

    /**
     * The meta object literal for the '<em><b>Together</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTRAINT__TOGETHER = eINSTANCE.getConstraint_Together();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINT__RIGHT = eINSTANCE.getConstraint_Right();

    /**
     * The meta object literal for the '<em><b>Split</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTRAINT__SPLIT = eINSTANCE.getConstraint_Split();

    /**
     * The meta object literal for the '<em><b>Par Min</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTRAINT__PAR_MIN = eINSTANCE.getConstraint_ParMin();

    /**
     * The meta object literal for the '<em><b>Par Max</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTRAINT__PAR_MAX = eINSTANCE.getConstraint_ParMax();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.AtomExpressionImpl <em>Atom Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.AtomExpressionImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getAtomExpression()
     * @generated
     */
    EClass ATOM_EXPRESSION = eINSTANCE.getAtomExpression();

    /**
     * The meta object literal for the '<em><b>Atom</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATOM_EXPRESSION__ATOM = eINSTANCE.getAtomExpression_Atom();

    /**
     * The meta object literal for the '<em><b>Terms</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATOM_EXPRESSION__TERMS = eINSTANCE.getAtomExpression_Terms();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.VariableExpressionImpl <em>Variable Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.VariableExpressionImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getVariableExpression()
     * @generated
     */
    EClass VARIABLE_EXPRESSION = eINSTANCE.getVariableExpression();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_EXPRESSION__NAME = eINSTANCE.getVariableExpression_Name();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.StringExpressionImpl <em>String Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.StringExpressionImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getStringExpression()
     * @generated
     */
    EClass STRING_EXPRESSION = eINSTANCE.getStringExpression();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRING_EXPRESSION__VALUE = eINSTANCE.getStringExpression_Value();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.NumberExpressionImpl <em>Number Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.NumberExpressionImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getNumberExpression()
     * @generated
     */
    EClass NUMBER_EXPRESSION = eINSTANCE.getNumberExpression();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMBER_EXPRESSION__VALUE = eINSTANCE.getNumberExpression_Value();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.ListExpressionImpl <em>List Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.ListExpressionImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getListExpression()
     * @generated
     */
    EClass LIST_EXPRESSION = eINSTANCE.getListExpression();

    /**
     * The meta object literal for the '<em><b>Head</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LIST_EXPRESSION__HEAD = eINSTANCE.getListExpression_Head();

    /**
     * The meta object literal for the '<em><b>Tail</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LIST_EXPRESSION__TAIL = eINSTANCE.getListExpression_Tail();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.AndExprImpl <em>And Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.AndExprImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getAndExpr()
     * @generated
     */
    EClass AND_EXPR = eINSTANCE.getAndExpr();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND_EXPR__LEFT = eINSTANCE.getAndExpr_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND_EXPR__RIGHT = eINSTANCE.getAndExpr_Right();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.CatExprImpl <em>Cat Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.CatExprImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getCatExpr()
     * @generated
     */
    EClass CAT_EXPR = eINSTANCE.getCatExpr();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CAT_EXPR__LEFT = eINSTANCE.getCatExpr_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CAT_EXPR__RIGHT = eINSTANCE.getCatExpr_Right();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.ShuffleExprImpl <em>Shuffle Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.ShuffleExprImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getShuffleExpr()
     * @generated
     */
    EClass SHUFFLE_EXPR = eINSTANCE.getShuffleExpr();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SHUFFLE_EXPR__LEFT = eINSTANCE.getShuffleExpr_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SHUFFLE_EXPR__RIGHT = eINSTANCE.getShuffleExpr_Right();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.UnionExprImpl <em>Union Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.UnionExprImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getUnionExpr()
     * @generated
     */
    EClass UNION_EXPR = eINSTANCE.getUnionExpr();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNION_EXPR__LEFT = eINSTANCE.getUnionExpr_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNION_EXPR__RIGHT = eINSTANCE.getUnionExpr_Right();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.SeqExprImpl <em>Seq Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.SeqExprImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getSeqExpr()
     * @generated
     */
    EClass SEQ_EXPR = eINSTANCE.getSeqExpr();

    /**
     * The meta object literal for the '<em><b>Seq Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SEQ_EXPR__SEQ_EXPR = eINSTANCE.getSeqExpr_SeqExpr();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.FilterExprImpl <em>Filter Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.FilterExprImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getFilterExpr()
     * @generated
     */
    EClass FILTER_EXPR = eINSTANCE.getFilterExpr();

    /**
     * The meta object literal for the '<em><b>Filter Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FILTER_EXPR__FILTER_EXPR = eINSTANCE.getFilterExpr_FilterExpr();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.VarExprImpl <em>Var Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.VarExprImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getVarExpr()
     * @generated
     */
    EClass VAR_EXPR = eINSTANCE.getVarExpr();

    /**
     * The meta object literal for the '<em><b>Var Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_EXPR__VAR_EXPR = eINSTANCE.getVarExpr_VarExpr();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.TerminalExprImpl <em>Terminal Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TerminalExprImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getTerminalExpr()
     * @generated
     */
    EClass TERMINAL_EXPR = eINSTANCE.getTerminalExpr();

    /**
     * The meta object literal for the '<em><b>Terminal Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TERMINAL_EXPR__TERMINAL_EXPR = eINSTANCE.getTerminalExpr_TerminalExpr();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.SingletonsImpl <em>Singletons</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.SingletonsImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getSingletons()
     * @generated
     */
    EClass SINGLETONS = eINSTANCE.getSingletons();

    /**
     * The meta object literal for the '<em><b>Min Singletons</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SINGLETONS__MIN_SINGLETONS = eINSTANCE.getSingletons_MinSingletons();

    /**
     * The meta object literal for the '<em><b>Max Singletons</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SINGLETONS__MAX_SINGLETONS = eINSTANCE.getSingletons_MaxSingletons();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.SizeImpl <em>Size</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.SizeImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getSize()
     * @generated
     */
    EClass SIZE = eINSTANCE.getSize();

    /**
     * The meta object literal for the '<em><b>Min Size</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIZE__MIN_SIZE = eINSTANCE.getSize_MinSize();

    /**
     * The meta object literal for the '<em><b>Max Size</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIZE__MAX_SIZE = eINSTANCE.getSize_MaxSize();

    /**
     * The meta object literal for the '{@link it.unige.dibris.trace_expression_language.tExp.impl.CardinalityImpl <em>Cardinality</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unige.dibris.trace_expression_language.tExp.impl.CardinalityImpl
     * @see it.unige.dibris.trace_expression_language.tExp.impl.TExpPackageImpl#getCardinality()
     * @generated
     */
    EClass CARDINALITY = eINSTANCE.getCardinality();

    /**
     * The meta object literal for the '<em><b>Min Cardinality</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CARDINALITY__MIN_CARDINALITY = eINSTANCE.getCardinality_MinCardinality();

    /**
     * The meta object literal for the '<em><b>Max Cardinality</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CARDINALITY__MAX_CARDINALITY = eINSTANCE.getCardinality_MaxCardinality();

  }

} //TExpPackage
