/**
 * generated by Xtext 2.12.0
 */
package it.unige.dibris.trace_expression_language.tExp.impl;

import it.unige.dibris.trace_expression_language.tExp.Channel;
import it.unige.dibris.trace_expression_language.tExp.Msg;
import it.unige.dibris.trace_expression_language.tExp.MsgEventType;
import it.unige.dibris.trace_expression_language.tExp.PrologExpression;
import it.unige.dibris.trace_expression_language.tExp.TExpPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Msg Event Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.impl.MsgEventTypeImpl#getName <em>Name</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.impl.MsgEventTypeImpl#getExpr <em>Expr</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.impl.MsgEventTypeImpl#getExprs <em>Exprs</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.impl.MsgEventTypeImpl#getMsgs <em>Msgs</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.impl.MsgEventTypeImpl#getChannel <em>Channel</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MsgEventTypeImpl extends MinimalEObjectImpl.Container implements MsgEventType
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getExpr() <em>Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpr()
   * @generated
   * @ordered
   */
  protected PrologExpression expr;

  /**
   * The cached value of the '{@link #getExprs() <em>Exprs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExprs()
   * @generated
   * @ordered
   */
  protected EList<PrologExpression> exprs;

  /**
   * The cached value of the '{@link #getMsgs() <em>Msgs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMsgs()
   * @generated
   * @ordered
   */
  protected EList<Msg> msgs;

  /**
   * The cached value of the '{@link #getChannel() <em>Channel</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChannel()
   * @generated
   * @ordered
   */
  protected Channel channel;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MsgEventTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TExpPackage.Literals.MSG_EVENT_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TExpPackage.MSG_EVENT_TYPE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PrologExpression getExpr()
  {
    return expr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpr(PrologExpression newExpr, NotificationChain msgs)
  {
    PrologExpression oldExpr = expr;
    expr = newExpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TExpPackage.MSG_EVENT_TYPE__EXPR, oldExpr, newExpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpr(PrologExpression newExpr)
  {
    if (newExpr != expr)
    {
      NotificationChain msgs = null;
      if (expr != null)
        msgs = ((InternalEObject)expr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TExpPackage.MSG_EVENT_TYPE__EXPR, null, msgs);
      if (newExpr != null)
        msgs = ((InternalEObject)newExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TExpPackage.MSG_EVENT_TYPE__EXPR, null, msgs);
      msgs = basicSetExpr(newExpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TExpPackage.MSG_EVENT_TYPE__EXPR, newExpr, newExpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<PrologExpression> getExprs()
  {
    if (exprs == null)
    {
      exprs = new EObjectContainmentEList<PrologExpression>(PrologExpression.class, this, TExpPackage.MSG_EVENT_TYPE__EXPRS);
    }
    return exprs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Msg> getMsgs()
  {
    if (msgs == null)
    {
      msgs = new EObjectContainmentEList<Msg>(Msg.class, this, TExpPackage.MSG_EVENT_TYPE__MSGS);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Channel getChannel()
  {
    if (channel != null && channel.eIsProxy())
    {
      InternalEObject oldChannel = (InternalEObject)channel;
      channel = (Channel)eResolveProxy(oldChannel);
      if (channel != oldChannel)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, TExpPackage.MSG_EVENT_TYPE__CHANNEL, oldChannel, channel));
      }
    }
    return channel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Channel basicGetChannel()
  {
    return channel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setChannel(Channel newChannel)
  {
    Channel oldChannel = channel;
    channel = newChannel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TExpPackage.MSG_EVENT_TYPE__CHANNEL, oldChannel, channel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TExpPackage.MSG_EVENT_TYPE__EXPR:
        return basicSetExpr(null, msgs);
      case TExpPackage.MSG_EVENT_TYPE__EXPRS:
        return ((InternalEList<?>)getExprs()).basicRemove(otherEnd, msgs);
      case TExpPackage.MSG_EVENT_TYPE__MSGS:
        return ((InternalEList<?>)getMsgs()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TExpPackage.MSG_EVENT_TYPE__NAME:
        return getName();
      case TExpPackage.MSG_EVENT_TYPE__EXPR:
        return getExpr();
      case TExpPackage.MSG_EVENT_TYPE__EXPRS:
        return getExprs();
      case TExpPackage.MSG_EVENT_TYPE__MSGS:
        return getMsgs();
      case TExpPackage.MSG_EVENT_TYPE__CHANNEL:
        if (resolve) return getChannel();
        return basicGetChannel();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TExpPackage.MSG_EVENT_TYPE__NAME:
        setName((String)newValue);
        return;
      case TExpPackage.MSG_EVENT_TYPE__EXPR:
        setExpr((PrologExpression)newValue);
        return;
      case TExpPackage.MSG_EVENT_TYPE__EXPRS:
        getExprs().clear();
        getExprs().addAll((Collection<? extends PrologExpression>)newValue);
        return;
      case TExpPackage.MSG_EVENT_TYPE__MSGS:
        getMsgs().clear();
        getMsgs().addAll((Collection<? extends Msg>)newValue);
        return;
      case TExpPackage.MSG_EVENT_TYPE__CHANNEL:
        setChannel((Channel)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TExpPackage.MSG_EVENT_TYPE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case TExpPackage.MSG_EVENT_TYPE__EXPR:
        setExpr((PrologExpression)null);
        return;
      case TExpPackage.MSG_EVENT_TYPE__EXPRS:
        getExprs().clear();
        return;
      case TExpPackage.MSG_EVENT_TYPE__MSGS:
        getMsgs().clear();
        return;
      case TExpPackage.MSG_EVENT_TYPE__CHANNEL:
        setChannel((Channel)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TExpPackage.MSG_EVENT_TYPE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case TExpPackage.MSG_EVENT_TYPE__EXPR:
        return expr != null;
      case TExpPackage.MSG_EVENT_TYPE__EXPRS:
        return exprs != null && !exprs.isEmpty();
      case TExpPackage.MSG_EVENT_TYPE__MSGS:
        return msgs != null && !msgs.isEmpty();
      case TExpPackage.MSG_EVENT_TYPE__CHANNEL:
        return channel != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //MsgEventTypeImpl
