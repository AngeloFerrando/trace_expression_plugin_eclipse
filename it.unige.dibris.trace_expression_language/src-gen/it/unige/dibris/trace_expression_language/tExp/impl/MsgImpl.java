/**
 * generated by Xtext 2.12.0
 */
package it.unige.dibris.trace_expression_language.tExp.impl;

import it.unige.dibris.trace_expression_language.tExp.Msg;
import it.unige.dibris.trace_expression_language.tExp.PrologExpression;
import it.unige.dibris.trace_expression_language.tExp.Role;
import it.unige.dibris.trace_expression_language.tExp.TExpPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Msg</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.impl.MsgImpl#getAsync_sender <em>Async sender</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.impl.MsgImpl#getReceiver <em>Receiver</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.impl.MsgImpl#getSender <em>Sender</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.impl.MsgImpl#getAsync_receiver <em>Async receiver</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.impl.MsgImpl#getPerformative <em>Performative</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.impl.MsgImpl#getContent <em>Content</em>}</li>
 *   <li>{@link it.unige.dibris.trace_expression_language.tExp.impl.MsgImpl#getConditions <em>Conditions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MsgImpl extends MinimalEObjectImpl.Container implements Msg
{
  /**
   * The cached value of the '{@link #getAsync_sender() <em>Async sender</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAsync_sender()
   * @generated
   * @ordered
   */
  protected Role async_sender;

  /**
   * The cached value of the '{@link #getReceiver() <em>Receiver</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReceiver()
   * @generated
   * @ordered
   */
  protected Role receiver;

  /**
   * The cached value of the '{@link #getSender() <em>Sender</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSender()
   * @generated
   * @ordered
   */
  protected Role sender;

  /**
   * The cached value of the '{@link #getAsync_receiver() <em>Async receiver</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAsync_receiver()
   * @generated
   * @ordered
   */
  protected Role async_receiver;

  /**
   * The default value of the '{@link #getPerformative() <em>Performative</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPerformative()
   * @generated
   * @ordered
   */
  protected static final String PERFORMATIVE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPerformative() <em>Performative</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPerformative()
   * @generated
   * @ordered
   */
  protected String performative = PERFORMATIVE_EDEFAULT;

  /**
   * The cached value of the '{@link #getContent() <em>Content</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContent()
   * @generated
   * @ordered
   */
  protected PrologExpression content;

  /**
   * The cached value of the '{@link #getConditions() <em>Conditions</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConditions()
   * @generated
   * @ordered
   */
  protected PrologExpression conditions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MsgImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TExpPackage.Literals.MSG;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Role getAsync_sender()
  {
    if (async_sender != null && async_sender.eIsProxy())
    {
      InternalEObject oldAsync_sender = (InternalEObject)async_sender;
      async_sender = (Role)eResolveProxy(oldAsync_sender);
      if (async_sender != oldAsync_sender)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, TExpPackage.MSG__ASYNC_SENDER, oldAsync_sender, async_sender));
      }
    }
    return async_sender;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Role basicGetAsync_sender()
  {
    return async_sender;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAsync_sender(Role newAsync_sender)
  {
    Role oldAsync_sender = async_sender;
    async_sender = newAsync_sender;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TExpPackage.MSG__ASYNC_SENDER, oldAsync_sender, async_sender));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Role getReceiver()
  {
    if (receiver != null && receiver.eIsProxy())
    {
      InternalEObject oldReceiver = (InternalEObject)receiver;
      receiver = (Role)eResolveProxy(oldReceiver);
      if (receiver != oldReceiver)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, TExpPackage.MSG__RECEIVER, oldReceiver, receiver));
      }
    }
    return receiver;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Role basicGetReceiver()
  {
    return receiver;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReceiver(Role newReceiver)
  {
    Role oldReceiver = receiver;
    receiver = newReceiver;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TExpPackage.MSG__RECEIVER, oldReceiver, receiver));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Role getSender()
  {
    if (sender != null && sender.eIsProxy())
    {
      InternalEObject oldSender = (InternalEObject)sender;
      sender = (Role)eResolveProxy(oldSender);
      if (sender != oldSender)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, TExpPackage.MSG__SENDER, oldSender, sender));
      }
    }
    return sender;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Role basicGetSender()
  {
    return sender;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSender(Role newSender)
  {
    Role oldSender = sender;
    sender = newSender;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TExpPackage.MSG__SENDER, oldSender, sender));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Role getAsync_receiver()
  {
    if (async_receiver != null && async_receiver.eIsProxy())
    {
      InternalEObject oldAsync_receiver = (InternalEObject)async_receiver;
      async_receiver = (Role)eResolveProxy(oldAsync_receiver);
      if (async_receiver != oldAsync_receiver)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, TExpPackage.MSG__ASYNC_RECEIVER, oldAsync_receiver, async_receiver));
      }
    }
    return async_receiver;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Role basicGetAsync_receiver()
  {
    return async_receiver;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAsync_receiver(Role newAsync_receiver)
  {
    Role oldAsync_receiver = async_receiver;
    async_receiver = newAsync_receiver;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TExpPackage.MSG__ASYNC_RECEIVER, oldAsync_receiver, async_receiver));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getPerformative()
  {
    return performative;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPerformative(String newPerformative)
  {
    String oldPerformative = performative;
    performative = newPerformative;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TExpPackage.MSG__PERFORMATIVE, oldPerformative, performative));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PrologExpression getContent()
  {
    return content;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetContent(PrologExpression newContent, NotificationChain msgs)
  {
    PrologExpression oldContent = content;
    content = newContent;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TExpPackage.MSG__CONTENT, oldContent, newContent);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setContent(PrologExpression newContent)
  {
    if (newContent != content)
    {
      NotificationChain msgs = null;
      if (content != null)
        msgs = ((InternalEObject)content).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TExpPackage.MSG__CONTENT, null, msgs);
      if (newContent != null)
        msgs = ((InternalEObject)newContent).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TExpPackage.MSG__CONTENT, null, msgs);
      msgs = basicSetContent(newContent, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TExpPackage.MSG__CONTENT, newContent, newContent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PrologExpression getConditions()
  {
    return conditions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConditions(PrologExpression newConditions, NotificationChain msgs)
  {
    PrologExpression oldConditions = conditions;
    conditions = newConditions;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TExpPackage.MSG__CONDITIONS, oldConditions, newConditions);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConditions(PrologExpression newConditions)
  {
    if (newConditions != conditions)
    {
      NotificationChain msgs = null;
      if (conditions != null)
        msgs = ((InternalEObject)conditions).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TExpPackage.MSG__CONDITIONS, null, msgs);
      if (newConditions != null)
        msgs = ((InternalEObject)newConditions).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TExpPackage.MSG__CONDITIONS, null, msgs);
      msgs = basicSetConditions(newConditions, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TExpPackage.MSG__CONDITIONS, newConditions, newConditions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TExpPackage.MSG__CONTENT:
        return basicSetContent(null, msgs);
      case TExpPackage.MSG__CONDITIONS:
        return basicSetConditions(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TExpPackage.MSG__ASYNC_SENDER:
        if (resolve) return getAsync_sender();
        return basicGetAsync_sender();
      case TExpPackage.MSG__RECEIVER:
        if (resolve) return getReceiver();
        return basicGetReceiver();
      case TExpPackage.MSG__SENDER:
        if (resolve) return getSender();
        return basicGetSender();
      case TExpPackage.MSG__ASYNC_RECEIVER:
        if (resolve) return getAsync_receiver();
        return basicGetAsync_receiver();
      case TExpPackage.MSG__PERFORMATIVE:
        return getPerformative();
      case TExpPackage.MSG__CONTENT:
        return getContent();
      case TExpPackage.MSG__CONDITIONS:
        return getConditions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TExpPackage.MSG__ASYNC_SENDER:
        setAsync_sender((Role)newValue);
        return;
      case TExpPackage.MSG__RECEIVER:
        setReceiver((Role)newValue);
        return;
      case TExpPackage.MSG__SENDER:
        setSender((Role)newValue);
        return;
      case TExpPackage.MSG__ASYNC_RECEIVER:
        setAsync_receiver((Role)newValue);
        return;
      case TExpPackage.MSG__PERFORMATIVE:
        setPerformative((String)newValue);
        return;
      case TExpPackage.MSG__CONTENT:
        setContent((PrologExpression)newValue);
        return;
      case TExpPackage.MSG__CONDITIONS:
        setConditions((PrologExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TExpPackage.MSG__ASYNC_SENDER:
        setAsync_sender((Role)null);
        return;
      case TExpPackage.MSG__RECEIVER:
        setReceiver((Role)null);
        return;
      case TExpPackage.MSG__SENDER:
        setSender((Role)null);
        return;
      case TExpPackage.MSG__ASYNC_RECEIVER:
        setAsync_receiver((Role)null);
        return;
      case TExpPackage.MSG__PERFORMATIVE:
        setPerformative(PERFORMATIVE_EDEFAULT);
        return;
      case TExpPackage.MSG__CONTENT:
        setContent((PrologExpression)null);
        return;
      case TExpPackage.MSG__CONDITIONS:
        setConditions((PrologExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TExpPackage.MSG__ASYNC_SENDER:
        return async_sender != null;
      case TExpPackage.MSG__RECEIVER:
        return receiver != null;
      case TExpPackage.MSG__SENDER:
        return sender != null;
      case TExpPackage.MSG__ASYNC_RECEIVER:
        return async_receiver != null;
      case TExpPackage.MSG__PERFORMATIVE:
        return PERFORMATIVE_EDEFAULT == null ? performative != null : !PERFORMATIVE_EDEFAULT.equals(performative);
      case TExpPackage.MSG__CONTENT:
        return content != null;
      case TExpPackage.MSG__CONDITIONS:
        return conditions != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (performative: ");
    result.append(performative);
    result.append(')');
    return result.toString();
  }

} //MsgImpl
